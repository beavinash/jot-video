{"filter":false,"title":"passport.js","tooltip":"/config/passport.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":38,"column":1},"action":"insert","lines":["const LocalStrategy  = require('passport-local').Strategy;","const mongoose = require('mongoose');","const bcrypt = require('bcryptjs');","","// Load user model","const User = mongoose.model('users');","","module.exports = function(passport){","  passport.use(new LocalStrategy({usernameField: 'email'}, (email, password, done) => {","    // Match user","    User.findOne({","      email:email","    }).then(user => {","      if(!user){","        return done(null, false, {message: 'No User Found'});","      } ","","      // Match password","      bcrypt.compare(password, user.password, (err, isMatch) => {","        if(err) throw err;","        if(isMatch){","          return done(null, user);","        } else {","          return done(null, false, {message: 'Password Incorrect'});","        }","      })","    })","  }));","","  passport.serializeUser(function(user, done) {","    done(null, user.id);","  });","  ","  passport.deserializeUser(function(id, done) {","    User.findById(id, function(err, user) {","      done(err, user);","    });","  });","}"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":38,"column":1},"end":{"row":38,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1521633166669,"hash":"7a0bb78e3024ba5e0e8a6b3dce5970f0e5a7e40d"}